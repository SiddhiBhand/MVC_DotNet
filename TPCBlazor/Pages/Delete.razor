@page "/Delete/{Id}"

@using TPCBlazor.Data
@using TPCBlazor.Models

@inject NavigationManager NavigationManager
@inject TestDBRepository repo

<h2>Delete Company</h2>
<hr />
<h3>Are you sure want to delete this?</h3>
<form>
    <div class="row">
        <div class=" col-md-8">
            <div class="form-group">
                <label>Company Id:</label>
                <label>@obj.Cid</label>
            </div>
            <div class="form-group">
                <label>Company Name:</label>
                <label>@obj.Name</label>
            </div>
            <div class="form-group">
                <label>Location:</label>
                <label>@obj.Location</label>
            </div>
            <div class="form-group">
                <label>Criteria:</label>
                <label>@obj.Criteria</label>
            </div>
            <div class="form-group">
                <label>VisitingDate:</label>
                <label>@obj.VisitingDate</label>
            </div>
            <div class="form-group">
                <label>Package:</label>
                <label>@obj.Package</label>
            </div>
            <div class="form-group">
                <label>Role:</label>
                <label>@obj.Role</label>
            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-danger" @onclick="@DeleteCompany" value="Delete" />
                <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</form>

@code {
    [Parameter]
    public string Id { get; set; }

    CompanyViewModel obj = new CompanyViewModel();

    protected override async Task OnInitializedAsync()
    {
        var getResult = await Task.Run(() => repo.GetEmployees());

        obj = getResult.Where(e => e.Cid == Convert.ToInt32(Id)).Select(e => new CompanyViewModel
        {
            Cid=e.Cid,
            Name = e.Name,
            Location = e.Location,
            Criteria = e.Criteria,
            VisitingDate = e.VisitingDate,
            Package = e.Package,
            Role = e.Role
        }).FirstOrDefault();
    }

    protected async void DeleteCompany()
    {
        await Task.Run(() => repo.DeleteCompany(obj.Cid));

        NavigationManager.NavigateTo("Companies");
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("Companies");
    }
}


